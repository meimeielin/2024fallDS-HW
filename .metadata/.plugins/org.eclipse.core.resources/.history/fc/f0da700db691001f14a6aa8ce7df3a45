import java.util.*;

public class Main {

	public static int calculate(String s) {
        Stack<Integer> numStack = new Stack<>();    // 用來存放數字
        Stack<Character> opStack = new Stack<>();   // 用來存放運算符

        int num = 0;
        char sign = '+';  // 初始符號設定為加號，預設為正數

        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);

            // 如果是數字字符，組合成一個完整的數字
            if (Character.isDigit(c)) {
                num = num * 10 + (c - '0');
            }

            // 如果是運算符號或已到達字串末尾，則處理當前的運算
            if (!Character.isDigit(c) && c != ' ' || i == s.length() - 1) {
                if (sign == '+') {
                    numStack.push(num);  // 加法，直接壓入數字堆疊
                } else if (sign == '-') {
                    numStack.push(-num);  // 減法，壓入負數
                } else if (sign == '*') {
                    numStack.push(numStack.pop() * num);  // 乘法，與前一個數字相乘
                } else if (sign == '/') {
                    numStack.push(numStack.pop() / num);  // 除法，與前一個數字相除
                }

                // 更新符號並重置數字
                sign = c;
                num = 0;
            }
        }

        // 最後將數字堆疊中的所有數字相加，這會處理所有加法和減法
        int result = 0;
        while (!numStack.isEmpty()) {
            result += numStack.pop();
        }

        return result;
    }

    public static void main(String[] args) {
        // 測試範例
        String expression1 = "3+5*2-8/4";
        String expression2 = "10+2*6";
        String expression3 = "100*2+12";
        String expression4 = "100*(2+12)/14";

        System.out.println(calculate(expression1)); // 輸出: 10
        System.out.println(calculate(expression2)); // 輸出: 22
        System.out.println(calculate(expression3)); // 輸出: 212
        // expression4 涉及括號，基本方法不支援括號，需要進階方法處理
    }
	/*
	public static void main(String[] args) {
		
		BracketMatcher b = new BracketMatcher();
        // 測試範例
        String input1 = "(){}[]";
        String input2 = "([{}])";
        String input3 = "(]";
        String input4 = "({[)]}";

        System.out.println(b.isValid(input1)); // true
        System.out.println(b.isValid(input2)); // true
        System.out.println(b.isValid(input3)); // false
        System.out.println(b.isValid(input4)); // false
    }
	*/
	/*
	public static void main(String[] args){
	
		int x = 1;
		ArrayList<Integer> test = new ArrayList<>();
		int[] arrayTest = new int[4];
		
		for(int i = 0; i < 4; i++) {
			arrayTest[i] = i;
			test.add(i);
		}
	
	//add(1,5) 05223
	//add(5)   01235
		//get
		System.out.println(test.get(x) + " " + arrayTest[x]);
		
		//set
		test.set(x, 2);
		arrayTest[x] = 2;
		System.out.println(test.get(x) + " " + arrayTest[x]);

		//add(index, int)
		test.add(x, 5);
		for (int i : test) {
			  System.out.print(i);
			}
		System.out.println();
	}
	*/
}
